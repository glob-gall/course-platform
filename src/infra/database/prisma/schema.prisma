// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  COURSE_OWNER
  ADMIN
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(STUDENT)
}

model Course {
  id          String @id @default(uuid())
  title       String
  description String

  sections Section[]
}

model Section {
  id           String        @id @default(uuid())
  title        String
  description  String
  Course       Course?       @relation(fields: [courseId], references: [id])
  courseId     String?
  sectionItems SectionItem[]
}

model SectionItem {
  id          String   @id @default(uuid())
  title       String?
  description String?
  Section     Section? @relation(fields: [sectionId], references: [id])
  sectionId   String?
}

model Lecture {
  id               String  @id @default(uuid())
  title            String
  description      String?
  videoURL         String?
  audioURL         String?
  externalResource String?
}

model Quizz {
  id          String  @id @default(uuid())
  title       String
  description String?
}

model Question {
  id          String  @id @default(uuid())
  title       String
  description String?

  videoURL         String?
  imageURL         String?
  audioURL         String?
  externalResource String?

  answers Answer[]
}

model Answer {
  id          String  @id @default(uuid())
  description String?

  videoURL         String?
  imageURL         String?
  audioURL         String?
  externalResource String?
  Question         Question? @relation(fields: [questionId], references: [id])
  questionId       String?
  isCorrect        Boolean
}
